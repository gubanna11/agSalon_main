@using agSalon.Data.Static;
@model IEnumerable<Attendance>
@*@model IEnumerable<Nullable<TimeSpan>>*@

@{
	ViewData["Title"] = "Attendances";
}

@*@foreach (var item in Model)
    {
        <span>
            @item.Client.Surname &emsp;

            @item.Group.Name &emsp;
            @item.Service.Name &emsp;

            @item.Worker.Surname &emsp;

            @Html.DisplayFor(a => item.Date) &emsp;
            @item.Time &emsp;

            @item.Price &emsp;
            @item.IsRendered
        </span>
    }*@


@*<input type="button" asp-controller="Attendances" asp-action="FilterAll" value="All">*@

@*<a href="Index">All</a>
    <a href="FilterNotPaid">NotPaid</a>
    <a href="FilterIsPaid">IsPaid</a>*@

<hr />
<table>
	<thead>
		<tr>
			<th>Client Surname</th>
			<th>Group Name</th>
			<th>Service Name</th>
			<th>Worker Surname</th>
			<th>Date</th>
			<th>Time</th>
			<th>Price</th>
			<th>Rendered</th>
			<th>Paid</th>
			<th></th>
			<th></th>
		</tr>
	</thead>
	<tbody>
		@if (ViewBag.NotPaid.Count > 0)
		{
			@foreach (var item in ViewBag.NotPaid)
			{
				<tr>
					<td>@item.Client.Surname</td>
					<td>@item.Group.Name</td>
					<td>@item.Service.Name</td>
					<td>@item.Worker.Client.Surname</td>
					<td>@item.Date.ToShortDateString()</td>
					<td>@item.Time</td>
					<td>@item.Price</td>
					<td>@item.IsRendered</td>
					<td>@item.IsPaid</td>


				@*	@if (User.Identity.IsAuthenticated && (User.IsInRole(UserRoles.Admin) || User.IsInRole(UserRoles.Worker)))
					{
						<td><a asp-action="Edit" asp-route-id="@item.Id">Edit</a></td>
					}
*@
					<td>
						@await Component.InvokeAsync("Delete", item.Id)
					</td>
				</tr>
			}
			<tr>
				<td colspan="6"></td>
				<td>@ViewBag.Total</td>
				<td><div id="paypal-btn"></div></td>

			</tr>
		}
		@foreach (var item in ViewBag.IsPaid)
		{

			<tr>
				<td>@item.Client.Surname</td>
				<td>@item.Group.Name</td>
				<td>@item.Service.Name</td>
				<td>@item.Worker.Client.Surname</td>
				<td> @item.Date.ToShortDateString()</td>
				<td>@item.Time</td>
				<td>@item.Price</td>
				<td>@item.IsRendered</td>
				<td>@item.IsPaid</td>

				
				@*	<td><a asp-action="Edit" asp-route-id="@item.Id">Edit</a></td>
				*@

				<td>
					@await Component.InvokeAsync("Delete", item.Id)
				</td>
			</tr>
		}
	</tbody>
</table>

@section Scripts{

	<script src="https://www.paypalobjects.com/api/checkout.js"></script>

	<script>

		let _total = @Html.Raw(ViewBag.Total);

		paypal.Button.render({
			//Configure environment
			env: 'sandbox',
			client: {
				sandbox: 'ARU3D2Jlr2QW3KKRlVSXdFiAZ46B8cM7wC5g-jdiUv1ESsr0kh_BGlxnalTMsIobmDFTBBM9ehgsdamW'
			},

			//Customize button
			locale: 'en_US',
			style: {
				size: 'small',
				color: 'gold',
				shape: 'pill'
			},
			commit: true,

			//Set up a payment
			payment: function (data, actions) {
				return actions.payment.create({
					transactions: [{
						amount: {
							total: _total,
							currency: 'USD'
						}
					}]
				});
			},

			//Execute the payment
			onAuthorize: function (data, actions) {
				return actions.payment.execute().then(function () {
					var url = '@Url.Action("CompletePayment", "Attendances", new { })';
					window.location.href = url;
				});
			}
		}, '#paypal-btn');
	</script>
}

